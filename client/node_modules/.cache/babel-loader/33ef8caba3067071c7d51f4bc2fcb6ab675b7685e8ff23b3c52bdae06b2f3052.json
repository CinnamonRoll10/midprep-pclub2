{"ast":null,"code":"var _jsxFileName = \"/Users/prakritiprasad/Documents/midprep-pclub2/client/src/worker-dash.js\",\n  _s = $RefreshSig$();\n// src/WorkerDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkerDashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const workerId = queryParams.get('workerId'); // Get workerId from query parameters\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!workerId) {\n        setError('Worker ID is missing');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await axios.get('/worker/tasks', {\n          params: {\n            workerId\n          } // Pass workerId as query parameter\n        });\n        setTasks(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, [workerId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading tasks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Worker Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Assigned Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Task ID: \", task.taskId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", task.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", task.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hourly Wage: \", task.hourlyWage, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Deadline: \", task.deadline]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, task.taskId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks assigned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(WorkerDashboard, \"YZSvgvAtK3tTBOChymi8bWiZc/Q=\", false, function () {\n  return [useLocation];\n});\n_c = WorkerDashboard;\nexport default WorkerDashboard;\nvar _c;\n$RefreshReg$(_c, \"WorkerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","WorkerDashboard","_s","tasks","setTasks","loading","setLoading","error","setError","location","queryParams","URLSearchParams","search","workerId","get","fetchTasks","response","params","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","taskId","status","description","hourlyWage","deadline","_c","$RefreshReg$"],"sources":["/Users/prakritiprasad/Documents/midprep-pclub2/client/src/worker-dash.js"],"sourcesContent":["// src/WorkerDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\n\nconst WorkerDashboard = () => {\n    const [tasks, setTasks] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const workerId = queryParams.get('workerId'); // Get workerId from query parameters\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            if (!workerId) {\n                setError('Worker ID is missing');\n                setLoading(false);\n                return;\n            }\n            try {\n                const response = await axios.get('/worker/tasks', {\n                    params: { workerId } // Pass workerId as query parameter\n                });\n                setTasks(response.data);\n                setLoading(false);\n            } catch (err) {\n                setError(err.message);\n                setLoading(false);\n            }\n        };\n\n        fetchTasks();\n    }, [workerId]);\n\n    if (loading) return <p>Loading tasks...</p>;\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div>\n            <h1>Worker Dashboard</h1>\n            <section>\n                <h2>Assigned Tasks</h2>\n                {tasks.length > 0 ? (\n                    <ul>\n                        {tasks.map(task => (\n                            <li key={task.taskId}>\n                                <h3>Task ID: {task.taskId}</h3>\n                                <p>Status: {task.status}</p>\n                                <p>Description: {task.description}</p>\n                                <p>Hourly Wage: {task.hourlyWage} ETH</p>\n                                <p>Deadline: {task.deadline}</p>\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No tasks assigned.</p>\n                )}\n            </section>\n        </div>\n    );\n};\n\nexport default WorkerDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}