{"ast":null,"code":"var _jsxFileName = \"/Users/prakritiprasad/Documents/midprep-pclub2/client/src/TaskManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getTaskAllocationContract } from './utils'; // Adjust path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskManagement() {\n  _s();\n  const [timeRequired, setTimeRequired] = useState('');\n  const [expertiseLevel, setExpertiseLevel] = useState('');\n  const [hourlyWage, setHourlyWage] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [isDivisible, setIsDivisible] = useState(false);\n  const addTask = async () => {\n    const contract = getTaskAllocationContract();\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const tx = await contract.methods.addTask(timeRequired, expertiseLevel, hourlyWage, deadline, isDivisible).send({\n        from: accounts[0]\n      });\n      await tx.wait();\n      alert('Task added successfully!');\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Time Required\",\n      value: timeRequired,\n      onChange: e => setTimeRequired(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Expertise Level\",\n      value: expertiseLevel,\n      onChange: e => setExpertiseLevel(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Hourly Wage\",\n      value: hourlyWage,\n      onChange: e => setHourlyWage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Deadline (timestamp)\",\n      value: deadline,\n      onChange: e => setDeadline(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Is Divisible\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isDivisible,\n        onChange: e => setIsDivisible(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskManagement, \"5DKlXRiWzMYERfOWlFx/Pfzgtfw=\");\n_c = TaskManagement;\nexport default TaskManagement;\nvar _c;\n$RefreshReg$(_c, \"TaskManagement\");","map":{"version":3,"names":["React","useState","getTaskAllocationContract","jsxDEV","_jsxDEV","TaskManagement","_s","timeRequired","setTimeRequired","expertiseLevel","setExpertiseLevel","hourlyWage","setHourlyWage","deadline","setDeadline","isDivisible","setIsDivisible","addTask","contract","accounts","window","ethereum","request","method","tx","methods","send","from","wait","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/prakritiprasad/Documents/midprep-pclub2/client/src/TaskManagement.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { getTaskAllocationContract } from './utils'; // Adjust path as needed\n\nfunction TaskManagement() {\n    const [timeRequired, setTimeRequired] = useState('');\n    const [expertiseLevel, setExpertiseLevel] = useState('');\n    const [hourlyWage, setHourlyWage] = useState('');\n    const [deadline, setDeadline] = useState('');\n    const [isDivisible, setIsDivisible] = useState(false);\n\n    const addTask = async () => {\n        const contract = getTaskAllocationContract();\n        try {\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            const tx = await contract.methods.addTask(\n                timeRequired,\n                expertiseLevel,\n                hourlyWage,\n                deadline,\n                isDivisible\n            ).send({ from: accounts[0] });\n            await tx.wait();\n            alert('Task added successfully!');\n        } catch (error) {\n            console.error(\"Error adding task:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Add Task</h2>\n            <input\n                type=\"number\"\n                placeholder=\"Time Required\"\n                value={timeRequired}\n                onChange={(e) => setTimeRequired(e.target.value)}\n            />\n            <input\n                type=\"number\"\n                placeholder=\"Expertise Level\"\n                value={expertiseLevel}\n                onChange={(e) => setExpertiseLevel(e.target.value)}\n            />\n            <input\n                type=\"number\"\n                placeholder=\"Hourly Wage\"\n                value={hourlyWage}\n                onChange={(e) => setHourlyWage(e.target.value)}\n            />\n            <input\n                type=\"number\"\n                placeholder=\"Deadline (timestamp)\"\n                value={deadline}\n                onChange={(e) => setDeadline(e.target.value)}\n            />\n            <label>\n                Is Divisible\n                <input\n                    type=\"checkbox\"\n                    checked={isDivisible}\n                    onChange={(e) => setIsDivisible(e.target.checked)}\n                />\n            </label>\n            <button onClick={addTask}>Add Task</button>\n        </div>\n    );\n}\n\nexport default TaskManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}